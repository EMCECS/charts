apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "bookkeeper-operator.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "bookkeeper-operator.commonLabels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ template "bookkeeper-operator.fullname" . }}
  template:
    metadata:
      labels:
        name: {{ template "bookkeeper-operator.fullname" . }}
        component: bookkeeper-operator
{{ include "common-monitoring-lib.logging-inject-labels" . | indent 8 }}
{{ include "common-lib.labels-sp-integrated-all" . | indent 8}}
      annotations:
{{ include "common-lib.vsphere-emm-integrated_annotation" . | indent 8}}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- if .Values.global.registrySecret }}
      imagePullSecrets:
        - name: {{ .Values.global.registrySecret }}
      {{- end }}
      containers:
        - name: {{ template "bookkeeper-operator.fullname" . }}
          image: "{{ .Values.global.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 6000
              name: metrics
          command:
            - bookkeeper-operator
          {{- if .Values.testmode.enabled }}
          args: ["-test", "-webhook=false"]
          {{- end }}
          env:
            - name: WATCH_NAMESPACE
              {{- if eq .Values.global.watchAllNamespaces true}}
              value: ""
              {{- else }}
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
              {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: {{ template "bookkeeper-operator.fullname" . }}
          volumeMounts:
          {{- if .Values.webhookCert.generate }}
            - name: webhook-cert
              mountPath: "/tmp/k8s-webhook-server/serving-certs"
              readOnly: true
          {{end}}
            - name: versions-volume
              mountPath: "/tmp/config"
      volumes:
      {{- if .Values.webhookCert.generate }}
        - name: webhook-cert
          secret:
            {{- if .Values.webhookCert.generate }}
            secretName: {{ template "bookkeeper-operator.fullname" . }}-cert-tls-bk
            {{- else }}
            secretName: {{ .Values.webhookCert.secretName }}
        {{- end }}
      {{end}}
        - name: versions-volume
          configMap:
            name: bk-supported-versions-map
