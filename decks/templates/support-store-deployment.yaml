apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: decks-support-store
  name: decks-support-store
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: decks-support-store
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: decks-support-store
    spec:
{{- if .Values.global.registrySecret }}
      imagePullSecrets:
        - name: {{ .Values.global.registrySecret }}
{{- end }}
      containers:
      - name: decks-support-store
        env:
{{- if .Values.global.registrySecret }}
        - name: REGISTRY_SECRET
          value: {{ .Values.global.registrySecret }}
{{- end }}
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: decks-support-store-secret
              key: username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: decks-support-store-secret
              key: password
        - name: SALT
          valueFrom:
            secretKeyRef:
              name: decks-support-store-secret
              key: salt
        image: {{ .Values.global.registry }}/{{.Values.supportStore.image.repository }}:{{ .Values.supportStore.image.version }}
        imagePullPolicy: {{ default .Values.pullPolicy .Values.supportStore.image.pullPolicy }}
        command: ["/bin/sh", "-c"]
        args: ["chmod +x /usr/local/bin/*.sh;
                sh /usr/local/bin/run-nginx.sh;
                nginx -g 'daemon off;'"]
        ports:
        - containerPort: {{ .Values.supportStore.containerPort }}
        resources: {}
        volumeMounts:
        - mountPath: /opt/secure/data
          name: decks-support-store-claim0
      restartPolicy: Always
      volumes:
      - name: decks-support-store-claim0
        persistentVolumeClaim:
          claimName: decks-support-store-claim0