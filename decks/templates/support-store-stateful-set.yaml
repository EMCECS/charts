---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: decks-support-store
  namespace: {{.Release.Namespace}}
  labels:
    io.kompose.service: decks-support-store
    app.kubernetes.io/name: decks
    release: {{.Release.Name}}
    name: decks
spec:
  serviceName: decks-support-store
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: decks-support-store
  template:
    metadata:
      labels:
        io.kompose.service: decks-support-store
    spec:
{{- if .Values.global.registrySecret }}
      imagePullSecrets:
        - name: {{ .Values.global.registrySecret }}
{{- end }}
      containers:
      - name: decks-support-store
        env:
{{- if .Values.global.registrySecret }}
        - name: REGISTRY_SECRET
          value: {{ .Values.global.registrySecret }}
{{- end }}
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: decks-support-store-secret
              key: username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: decks-support-store-secret
              key: password
        - name: SALT
          valueFrom:
            secretKeyRef:
              name: decks-support-store-secret
              key: salt
        image: {{ .Values.global.registry }}/{{.Values.supportStore.image.repository}}:{{default .Values.tag .Values.supportStore.image.tag}}
        {{- if .Values.supportStore }}
        imagePullPolicy: {{ default .Values.pullPolicy .Values.supportStore.image.pullPolicy }}
        {{- else }}
        imagePullPolicy: IfNotPresent
        {{- end}}
        command: ["/usr/local/bin/run-nginx.sh"]
        ports:
        {{- if .Values.supportStore }}
        - containerPort: {{ .Values.supportStore.containerPort }}
        {{- else }}
        - containerPort: 7443
        {{- end }}
        resources: {}
        volumeMounts:
        - mountPath: /opt/secure/data
          name: decks-support-store-claim0
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        labels:
          app: decks-support-store
          release: decks
        name: decks-support-store-claim0
      spec:
        accessModes:
        - ReadWriteOnce
        {{- if .Values.storageClassName}}
        storageClassName: {{.Values.storageClassName}}
        {{- end}}
        dataSource: null
        resources:
          requests:
            storage: 200Gi
