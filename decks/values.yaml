---
# Default values for ecs-flex.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# These global settings relate to DECKS
global:
  # Name of a Kubernetes secret with Docker credentials for the private registry
  # registrySecret: harbor-registry-secret

  # The private docker registry hosting containers for ECS Flex
  # registry: harbor
  registry: harbor.lss.emc.com/ecs
  # Default: "" == Watch ALL namespaces
  watchNamespace: ""
  webdav:
    registry: emccorp

# The default docker tag and pull policy for the DECKS
tag: 0.2.0
pullPolicy: Always

# The number of replicas for the DECKS deployment
replicaCount: 1

# The image configured for the DECKS
image:
  repository: decks
  # tag: stable
  # pullPolicy: Always



webdav:
  image:
    repository: decks-webdav
    tag: 2.4
    pullPolicy: Always

  storageClass: vsphere

  containerPort: 80

  persistentVolume:
    size: 200Gi

  service:
    port: 8000
    targetPort: 80

  secret:
    username: YWRtaW4=
    password: Q2hhbmdlTWU=
  

# decks helm test configuration
# this image is the test image for DECKS. It will run as "helm test" to verify the DECKS functionality as a black box
helmTestConfig:
  testImage:
    repository: decks-testapp
    # tag: stable
    # pullPolicy: Always
  srsGateway:
    # product to test
    product: "OBJECTSCALE"
    # The login setting configures the user/password credentials
    # for registering a product with the test SRS gateway
    login: "isilon.test@emconlinesupport.com:Password1"
    # The gateway hostname can be an IP address or an FQDN
    hostname: "10.249.253.18"
    port: 9443

# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources: {}
# limits:
#  cpu: 100m
#  memory: 128Mi
# requests:
#  cpu: 100m
#  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
