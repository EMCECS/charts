---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: dell-ese-{{.Values.product}}
spec:
  allowPrivilegeEscalation: true
  allowedCapabilities:
  - '*'
  privileged: true
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - '*'
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dell-ese-{{.Values.product}} 
  namespace: {{ .Release.Namespace }} 

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: dell-ese-{{.Values.product}}
subjects:
- kind: ServiceAccount
  name: dell-ese-{{.Values.product}}
  namespace: {{.Release.Namespace}}
roleRef:
  kind: ClusterRole
  name: dell-ese-{{.Values.product}}
  apiGroup: rbac.authorization.k8s.io

---
# Source: kahm/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dell-ese-{{.Values.product}} 
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - dell-ese-{{.Values.product}} 

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dell-ese-{{required "product must be specified" .Values.product}}-default-properties
  labels:
    release: dell-ese-{{.Values.product}}
data:
  DefaultProperties.json: |
    # ESE Static configuration. It is simple JSON, but
    # may contain comments prefixed by '#'
    # For property information, visit: https://confluence.gtie.dell.com/display/LCOM/ESE+Configuration
    {
        "ipAddress": "0.0.0.0",
        "port": "8080",
        "sslPort": "9443",
        "useSSL": false,
        "defaultBackendType": "srs",
        "remoteAccessEnabled": false,
        "srsPrefix": "/esrs/{version}/devices",
        "proxyUri": "",
        "proxyUser": "",
        "proxyPassword": "",
        "useProxy": false,
        "connectionState": "enabled",
        "useGateways": true,
        "productIdBlock": {},
        "enableDataItemApi": true,
        "usingBuiltinConfig": false,
        "remoteConfig": {},
        "gatewayEndpoints": [],
        "productFrontendUri": "http://localhost:8087",
        # Could also be HTTPS: "productFrontendUri": "https://localhost:8447",
        "productFrontendPrefix": "{{.Values.product}}",
        "productFrontendType": "webrest",
        "contractVersion": "1.0",
        "eventMuted": false,
        "systemMode": "Debug",
        "srsTransferType": "{{.Values.product | upper}}"
    }
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dell-ese-{{.Values.product}}
    release: dell-ese-{{.Values.product}}
  name: dell-ese-{{.Values.product}}
  namespace: {{.Release.Namespace}}
spec:
  type: LoadBalancer
  ports:
    - name: secure
      port: 9447
      targetPort: secure
      protocol: TCP
    - name: insecure
      port: 8080
      targetPort: insecure
      protocol: TCP
  selector:
    name: dell-ese-{{.Values.product}}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dell-ese-{{.Values.product}}-headless
    release: dell-ese-{{.Values.product}}
  name: dell-ese-{{.Values.product}}-headless
spec:
  clusterIP: None
  ports:
    - name: secure
      port: 9447
      targetPort: secure
      protocol: TCP
    - name: insecure
      port: 8080
      targetPort: insecure
      protocol: TCP
  selector:
    name: dell-ese-{{.Values.product}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dell-ese-{{.Values.product}}
  namespace: {{ .Release.Namespace }} 
  labels:
    release: dell-ese-{{.Values.product}}
  annotations:
    container.apparmor.security.beta.kubernetes.io/webdav: unconfined
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      name: dell-ese-{{.Values.product}}
      io.kompose.service: ese-store
  serviceName: dell-ese-{{.Values.product}}headless
  template:
    metadata:
      labels:
        name: dell-ese-{{.Values.product}}
        release: dell-ese-{{.Values.product}}
        app: dell-ese-{{.Values.product}}
        io.kompose.service: ese-store
    spec:
      #option 1: change permission so that ese process can access the persistent volume
      # securityContext:
      #   runAsUser: 1000
      #   runAsGroup: 3000
      #   fsGroup: 2000
      #option 2
      initContainers:
      - name: ese-data-permission-fix
        image: busybox
        command: ["/bin/chmod","-R","777", "/opt/ese/var"]
        volumeMounts:
        - name: persistentdata
          mountPath: /opt/ese/var
      containers:
        - name: dell-ese-{{.Values.product}}-fuse
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
          image: efrecon/webdav-client
          imagePullPolicy: IfNotPresent
          env:
          - name: WEBDRIVE_USERNAME
            value: eV3C6
          - name: WEBDRIVE_PASSWORD
            value: 8VCULfkLco
          - name: WEBDRIVE_URL
            value: http://10.240.117.52:7443/upload/
          - name: DAVFS2_ASK_AUTH
            value: "0"
          - name: WEBDRIVE_MOUNT
            value: /mnt/telemetry
          - name: OWNER
            value: "1000"
          volumeMounts:
            - mountPath: /mnt/telemetry
              name: telemetry
        - name: dell-ese-{{.Values.product}}
          # image: harbor.lss.emc.com/ecs/dell-ese:1.1.1.9
          image: {{.Values.global.registry}}/{{.Values.image.repository}}:{{default .Values.image.tag .Values.tag}}
          imagePullPolicy: {{default .Values.image.pullPolicy .Values.pullPolicy}}
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
          command: ["/opt/ese/bin/ese_launcher"]
          args: ["--debug"]
          # command: ["/bin/sh"]
          # args: ["-c", "while true; do date; echo hello; sleep 10;done"]
          ports:
            - containerPort: 9447
              name: secure
              protocol: TCP
            - containerPort: 8080
              name: insecure
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/ese/var
              name: persistentdata
            - name: dell-ese-default-properties
              mountPath: /opt/ese/etc/DefaultProperties.json
              subPath: DefaultProperties.json
            - name: telemetry 
              mountPath: /telemetry
          env:
            - name: REGISTRY_SECRET
              value: dockerhub-registry-secret
        - name: ese-store
          image: {{ .Values.global.registry }}/{{.Values.eseStore.image.repository }}:{{ .Values.eseStore.image.version }}
          imagePullPolicy: {{ default .Values.pullPolicy .Values.eseStore.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args: ["chmod +x /usr/local/bin/*.sh;
                  sh /usr/local/bin/run-nginx.sh;
                  nginx -g 'daemon off;'"]
          ports:
          - containerPort: {{ .Values.eseStore.containerPort }}
          resources: {}
          volumeMounts:
          - mountPath: /opt/secure/data
            name: ese-store-claim0
          env:
{{- if .Values.global.registrySecret }}
          - name: REGISTRY_SECRET
            value: {{ .Values.global.registrySecret }}
{{- end }}
          - name: USERNAME
            valueFrom:
              secretKeyRef:
                name: ese-store-secret
                key: username
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: ese-store-secret
                key: password
          - name: SALT
            valueFrom:
              secretKeyRef:
                name: ese-store-secret
                key: salt
      volumes:
        - name: dell-ese-default-properties
          configMap:
            name: dell-ese-{{.Values.product}}-default-properties
        - name: ese-store-claim0
          persistentVolumeClaim:
            claimName: ese-store-claim0
{{- if .Values.global.registrySecret }}
      imagePullSecrets:
      - name: {{ .Values.global.registrySecret }}
{{- end }}
  volumeClaimTemplates:
    - metadata:
        labels:
          release: dell-ese-{{.Values.product}}
          app: dell-ese-{{.Values.product}}
        name: persistentdata
      spec:
        accessModes:
          - ReadWriteOnce
        dataSource: null
        resources:
          requests:
            storage: 2Gi
    - metadata:
        labels:
          release: dell-ese-{{.Values.product}}
          app: dell-ese-{{.Values.product}}
        name: telemetry
      spec:
        accessModes:
          - ReadWriteOnce
        dataSource: null
        resources:
          requests:
            storage: 2Gi
