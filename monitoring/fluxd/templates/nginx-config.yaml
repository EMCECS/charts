{{- if .Values.global.tls_enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ template "fluxd.fullname" . }}-nginx"
  labels:
    release: {{ .Release.Name }}
data:
  nginx.conf: |+
    server {
      server_name {{ include "fluxd.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local;

    {{- if not .Values.global.tls_enabled }}
      listen {{ .Values.service.bind_address }};
    {{- else }}
      listen {{ .Values.service.bind_address }} ssl;
      {{- if $.Values.global.use_vault_for_ssl }}
      ssl_certificate        /vault/secrets/server.crt;
      ssl_certificate_key    /vault/secrets/server.key;
      ssl_client_certificate /vault/secrets/trusted_client_ca.crt;
      ssl_verify_client         optional;
      ssl_verify_depth          2;
      {{- else }}
      ssl_certificate     /etc/nginx/cert/server.crt;
      ssl_certificate_key /etc/nginx/cert/server.key;
      ssl_password_file   /etc/nginx/cert/password;
      ssl_verify_client         off;
      {{- end }}
      ssl_protocols             TLSv1.2;
      ssl_session_cache   shared:SSL:1m;
      ssl_session_timeout 5m;
    {{- end }}

      location / {
          proxy_pass http://127.0.0.1:{{ .Values.config.http.bind_address }};
          proxy_set_header Connection "";
          proxy_set_header Authorization "";
          proxy_buffering            off;
          proxy_buffer_size          32k;
          proxy_buffers           16 32k;
          proxy_busy_buffers_size   256k;

          proxy_set_header   Host			 $host;
          proxy_set_header   X-Real-IP		$remote_addr;
          proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
          add_header Cache-Control private;
      }
    }

{{- $top := . }}
{{- $scheme := ternary "https" "http" .Values.global.tls_enabled }}
{{- $telegraf_scheme := and .Values.global.tls_enabled .Values.global.telegraf_tls_enabled | ternary "https" "http" }}
{{- $replicas := include "common-lib.influxdb_replicas" . }}

{{range $i, $e := until (int $replicas)}}
    server {
      listen 127.0.0.1{{$i}}:8{{$i}}86;
      server_name 127.0.0.1{{$i}};
    {{- if $.Values.global.tls_enabled }}
      ssl_session_cache   shared:SSL:1m;
      ssl_session_timeout 5m;
    {{- end }}

      location / {
          resolver {{ $.Values.global.internal_dns }} valid=30s;
          set $upstream_influxdb_{{$i}} {{ $top.Release.Name }}-influxdb-{{$i}}.{{ $top.Release.Name }}-influxdb.{{ $top.Release.Namespace }}.svc.cluster.local;

          proxy_pass {{ $scheme }}://$upstream_influxdb_{{$i}}:8086;
          proxy_set_header Connection "";
          proxy_set_header Authorization "";
        {{- if $.Values.global.tls_enabled }}
          {{- if $.Values.global.use_vault_for_ssl }}
          proxy_ssl_certificate         /vault/secrets/influxdb_client.crt;
          proxy_ssl_certificate_key     /vault/secrets/influxdb_client.key;
          proxy_ssl_trusted_certificate /vault/secrets/trusted_influxdb_server_ca.crt;
          proxy_ssl_name          {{ $top.Release.Name }}-influxdb.{{ $top.Release.Namespace }}.svc.cluster.local;
          proxy_ssl_verify        on;
          proxy_ssl_verify_depth  2;
          {{- else }}
          proxy_ssl_certificate     /etc/nginx/cert/client.crt;
          proxy_ssl_certificate_key /etc/nginx/cert/client.key;
          proxy_ssl_password_file   /etc/nginx/cert/password;
          proxy_ssl_verify       off;
          {{- end }}
          proxy_ssl_protocols     TLSv1.2;
        {{- end }}
          proxy_read_timeout      180s;
          proxy_buffering            off;
          proxy_buffer_size          32k;
          proxy_buffers           16 32k;
          proxy_busy_buffers_size   256k;

          proxy_set_header   Host			 $host;
          proxy_set_header   X-Real-IP		$remote_addr;
          proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
          add_header Cache-Control private;
      }
    }
{{- end -}}

    server {
      # Telegraf is added to support http.to() function called by CQ
      # Address should match with address in CQ config
      listen 127.0.0.30:11002;
      server_name 127.0.0.30;
      ssl_session_cache   shared:SSL:1m;
      ssl_session_timeout 5m;

      location / {
          resolver {{ $.Values.global.internal_dns }} valid=30s;
          set $upstream_telegraf {{ .Release.Name }}-telegraf.{{ .Release.Namespace }}.svc.cluster.local;

          proxy_pass {{ $telegraf_scheme }}://$upstream_telegraf:11002;
          proxy_set_header Connection "";
          proxy_set_header Authorization "";
        {{- if and .Values.global.tls_enabled .Values.global.telegraf_tls_enabled }}
          {{- if $.Values.global.use_vault_for_ssl }}
          proxy_ssl_certificate         /vault/secrets/telegraf_client.crt;
          proxy_ssl_certificate_key     /vault/secrets/telegraf_client.key;
          proxy_ssl_trusted_certificate /vault/secrets/trusted_telegraf_server_ca.crt;
          proxy_ssl_verify        on;
          proxy_ssl_verify_depth  2;
          {{- else }}
          proxy_ssl_certificate     /etc/nginx/cert/client.crt;
          proxy_ssl_certificate_key /etc/nginx/cert/client.key;
          proxy_ssl_password_file   /etc/nginx/cert/password;
          proxy_ssl_verify       off;
          {{- end }}
          proxy_ssl_protocols     TLSv1.2;
        {{- end }}
          proxy_read_timeout      180s;
          proxy_buffering            off;
          proxy_buffer_size          32k;
          proxy_buffers           16 32k;
          proxy_busy_buffers_size   256k;

          proxy_set_header   Host			 $host;
          proxy_set_header   X-Real-IP		$remote_addr;
          proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
          add_header Cache-Control private;
      }
    }
{{- end }}
