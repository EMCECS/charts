{
  "__inputs": [
    {
      "name": "DS_FLUX",
      "label": "Flux",
      "description": "",
      "type": "datasource",
      "pluginId": "grafana-influxdb-flux-datasource",
      "pluginName": "Flux (InfluxDB) [BETA]"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "6.2.5"
    },
    {
      "type": "datasource",
      "id": "grafana-influxdb-flux-datasource",
      "name": "Flux (InfluxDB) [BETA]",
      "version": "5.2.11"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1582285813172,
  "links": [],
  "panels": [
    {
      "columns": [],
      "fontSize": "100%",
      "gridPos": {
        "h": 22,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "links": [],
      "options": {},
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 5,
        "desc": false
      },
      "styles": [
        {
          "alias": "Time",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "hidden"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "pattern": "Measurement",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Field",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Value",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "Disks",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "a1_Disks",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Status",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "a2_Status",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Slot Info",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "a3_Slot_Info",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "query": "// get node states\nnodes = from(bucket: \"monitoring_main\") \r\n|> filter(fn: (r) => r._measurement == \"ssm_sstable_SSTable_SS\" and r.SS =~ /$node_id/ and r._field == \"state\")\r\n|> range(start: -13h) \n|> last()\r\n|> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\") \n|> keep(columns: [\"SS\", \"state\"])\n\r|> last(column: \"SS\")\r\n\n// get disk states and additional info\nall_disks_info = from(bucket: \"monitoring_main\")\r\n|> filter(fn: (r) => r._measurement == \"ssm_sstable_SSTable_SS_partitions_PD_status\" and r.SS =~ /$node_id/ and (r._field == \"hwState\"))\r\n|> range(start: -13h)\r\n\r|> last()\r\n\nhwState = all_disks_info\n|> filter(fn: (r) => r._field == \"hwStateTimestamp\" or \rr._field == \"hwState\")\r\n|> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n|> keep(columns: [\"SS\", \"PD\", \"hwState\"])\n\r|> last(column: \"SS\")\r\n\n// merge disk and nodes statuses\ndisks_and_nodes = join(tables: {hwState: hwState, nodes: nodes}, on: [\"SS\"]) \r\n\n//filter out different statuses\ngood = disks_and_nodes\r\n|> filter(fn: (r) => r.hwState =~ /(?i)good/ and r.state == \"SS UP\")\r\n|> set(key: \"hwState\", value: \"Good\")\r\n\nnotaccessible = disks_and_nodes\r\n|> filter(fn: (r) => r.state != \"SS UP\")\r\n|> set(key: \"hwState\", value: \"Not Accessible\")\r\n\nsuspect = disks_and_nodes\r\n|> filter(fn: (r) => r.hwState =~ /(?i)unknown|(?i)suspect/ and r.state == \"SS UP\")\r\n|> set(key: \"hwState\", value: \"Suspect\")\r\n\nbad = disks_and_nodes\r\n|> filter(fn: (r) => r.hwState =~ /(?i)bad/ and r.state == \"SS UP\")\r\n|> set(key: \"hwState\", value: \"Bad\")\r\n\nmaintenance = disks_and_nodes\r\n|> filter(fn: (r) => r.hwState =~ /(?i)maintenance/ and r.state == \"SS UP\")\r\n|> set(key: \"hwState\", value: \"Maintenance\")\r\n\n// merge all statuses and prepare headers\nunion(tables: [good, notaccessible, suspect, bad, maintenance])\n|> group()\n// sort headers\n|> map(fn: (r) => ({\ra1_Disks: r.PD,\r a2_Status: r.hwState}))",
          "refId": "A",
          "resultFormat": "table"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Disks statuses by node ($node_id)",
      "transform": "table",
      "type": "table"
    }
  ],
  "refresh": false,
  "schemaVersion": 18,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {},
        "datasource": "${DS_FLUX}",
        "definition": "from(bucket: \"monitoring_main\") |> filter(fn: (r) => r._measurement == \"ssm_sstable_SSTable_SS\" and r._field==\"state\" )|> range(start: -5d) |> last()|> distinct(column:\"SS\")",
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "node_id",
        "options": [],
        "query": "from(bucket: \"monitoring_main\") |> filter(fn: (r) => r._measurement == \"ssm_sstable_SSTable_SS\" and r._field==\"state\" )|> range(start: -5d) |> last()|> distinct(column:\"SS\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-12h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Hardware Health: All Nodes and Disks - by Nodes",
  "uid": "jsSUw7cWk",
  "version": 2
}
