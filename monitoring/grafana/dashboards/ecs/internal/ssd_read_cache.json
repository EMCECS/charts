{
  "__inputs": [
    {
      "name": "DS_FLUX",
      "label": "Flux",
      "description": "",
      "type": "datasource",
      "pluginId": "grafana-influxdb-flux-datasource",
      "pluginName": "Flux (InfluxDB) [BETA]"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "6.2.5"
    },
    {
      "type": "datasource",
      "id": "grafana-influxdb-flux-datasource",
      "name": "Flux (InfluxDB) [BETA]",
      "version": "5.2.11"
    },
    {
      "type": "panel",
      "id": "graph",
      "name": "Graph",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1582102447571,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 12,
      "panels": [],
      "title": "Latency",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "fill": 1,
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 8,
      "legend": {
        "avg": false,
        "current": true,
        "max": true,
        "min": true,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {},
      "percentage": false,
      "pointradius": 0.5,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "hide": false,
          "query": "import \"ecs\"\n\nwi = ecs.get_dynamic_window_info(int_start: $__range_from_s, int_stop: $__range_to_s, max: 200)\n\na = from(bucket: \"monitoring_main\") \n    |> filter(fn: (r) => r._measurement == \"blob_SSDReadCache_Stats\" and r.id == \"get_latency_counter\"  and (\"${all_hosts}\" == \"yes\" or r.host =~ /^${host:pipe}$/ ))  \n    |> range(start: wi.start, stop: wi.stop)         \n|> drop(columns:[\"_measurement\", \"process\", \"tag\"])\n    |> difference(nonNegative: true) \n    |> fill(column: \"_value\", value: 0)\n    |> group(columns: [\"_field\"]) \n    |> window(every: wi.duration)     \n    |> sum() |> fill(column: \"_value\", value: 0) \n    |> map(fn:(r) => ({_time:r._start, le_float: float(v:r._field), cnt_float: float(v:r._value)}))\n    |> drop(columns:[\"_field\", \"_stop\"]) \n    \np50 = a |> histogramQuantile(quantile:0.50, upperBoundColumn: \"le_float\", countColumn: \"cnt_float\")\n|> rename(columns:{_start: \"_time\"})\n|> set(key: \"_field\", value: \"Get latency, p50\")\np99 = a |> histogramQuantile(quantile:0.99, upperBoundColumn: \"le_float\", countColumn: \"cnt_float\")\n|> rename(columns:{_start: \"_time\"})\n|> set(key: \"_field\", value: \"Get latency, p99\")\nunion(tables: [p50, p99])|> group(columns:[\"_field\"])",
          "refId": "A",
          "resultFormat": "time_series"
        },
        {
          "hide": false,
          "query": "import \"ecs\"\n\nwi = ecs.get_dynamic_window_info(int_start: $__range_from_s, int_stop: $__range_to_s, max: 200)\n\na= from(bucket: \"monitoring_main\") \n    |> filter(fn: (r) => r._measurement == \"blob_SSDReadCache_Stats\" and r.id == \"put_latency_counter\"  and (\"${all_hosts}\" == \"yes\" or r.host =~ /^${host:pipe}$/ ))  \n    |> range(start: wi.start, stop: wi.stop)     \n    |> drop(columns:[\"_measurement\", \"process\", \"tag\"])\n    |> difference(nonNegative: true) \n    |> fill(column: \"_value\", value: 0)\n    |> group(columns: [\"_field\"]) \n    |> window(every: wi.duration)     \n    |> sum() |> fill(column: \"_value\", value: 0) \n    |> map(fn:(r) => ({_time:r._start, le_float: float(v:r._field), cnt_float: float(v:r._value)}))\n    |> drop(columns:[\"_field\", \"_stop\"]) \n    \np50 = a |> histogramQuantile(quantile:0.50, upperBoundColumn: \"le_float\", countColumn: \"cnt_float\")\n|> rename(columns:{_start: \"_time\"})\n|> set(key: \"_field\", value: \"Put latency, p50\")\np99 = a |> histogramQuantile(quantile:0.99, upperBoundColumn: \"le_float\", countColumn: \"cnt_float\")\n|> rename(columns:{_start: \"_time\"})\n|> set(key: \"_field\", value: \"Put latency, p99\")\nunion(tables: [p50, p99])|> group(columns:[\"_field\"])\n",
          "refId": "B",
          "resultFormat": "time_series"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Latency",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "Âµs",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 4,
      "panels": [],
      "title": "Disk Usage",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "fill": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 11
      },
      "id": 2,
      "legend": {
        "avg": false,
        "current": true,
        "hideZero": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {},
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "hide": false,
          "query": "from(bucket: \"monitoring_main\") \r\n    |> filter(fn: (r) => r._measurement == \"blob_SSDReadCache_Stats\" and r._field == \"rocksdb_disk_usage_counter_bytes\" and (\"${all_hosts}\" == \"yes\" or r.host =~ /^${host:pipe}$/ ))\r\n    \r|> range($range)\r\n    |> keep(columns:[\"_time\", \"_field\", \"_value\"])\r\n    |> map(fn: (r) => ({_time: r._time, _field: \"Used bytes\", _value: r._value}))\r\n",
          "refId": "A",
          "resultFormat": "time_series"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Disk Usage",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": null,
          "format": "bytes",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "fill": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 11
      },
      "id": 6,
      "legend": {
        "avg": false,
        "current": true,
        "hideZero": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {},
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "hide": false,
          "query": "from(bucket: \"monitoring_main\") \r\n    |> filter(fn: (r) => r._measurement == \"blob_SSDReadCache_Stats\" and r._field == \"ssd_capacity_counter_bytes\" and (\"${all_hosts}\" == \"yes\" or r.host =~ /^${host:pipe}$/ )\r)\n    \r|> range($range)\r\n    |> keep(columns:[\"_time\", \"_field\", \"_value\"])\r\n    |> map(fn: (r) => ({_time: r._time, _field: \"Disk Capacity\", _value: r._value}))\r\n",
          "refId": "B"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Disk Capacity",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": null,
          "format": "bytes",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": false,
  "schemaVersion": 18,
  "style": "dark",
  "tags": [
    "SSD Read Cache"
  ],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {},
        "datasource": "${DS_FLUX}",
        "definition": "from(bucket:\"monitoring_main\")     |> range(start: -60m)     |> filter(fn:(r) => r._measurement == \"blob_SSDReadCache_Stats\" )     |> group(columns:[\"host\"])     |> distinct(column:\"host\")",
        "hide": 0,
        "includeAll": false,
        "label": "Node",
        "multi": false,
        "name": "host",
        "options": [],
        "query": "from(bucket:\"monitoring_main\")     |> range(start: -60m)     |> filter(fn:(r) => r._measurement == \"blob_SSDReadCache_Stats\" )     |> group(columns:[\"host\"])     |> distinct(column:\"host\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 5,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "SSD Read Cache",
  "uid": "J8znZyJZk",
  "version": 2
}