{
  "__inputs": [
    {
      "name": "DS_FLUX",
      "label": "Flux",
      "description": "",
      "type": "datasource",
      "pluginId": "grafana-influxdb-flux-datasource",
      "pluginName": "Flux (InfluxDB) [BETA]"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "6.2.5ecs"
    },
    {
      "type": "datasource",
      "id": "grafana-influxdb-flux-datasource",
      "name": "Flux (InfluxDB) [BETA]",
      "version": "5.2.11"
    },
    {
      "type": "panel",
      "id": "graph",
      "name": "Graph",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1586517643459,
  "links": [
    {
      "asDropdown": true,
      "icon": "external link",
      "tags": [
        "Process Health"
      ],
      "title": "Related dashboards",
      "type": "dashboards"
    }
  ],
  "panels": [
    {
      "columns": [],
      "description": "Monitor processes use of CPU, memory, average thread number and last restart time in the selected time range. The table displays the latest values in the selected time range. ",
      "fontSize": "100%",
      "gridPos": {
        "h": 13,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "links": [],
      "options": {},
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 11,
        "desc": true
      },
      "styles": [
        {
          "alias": "Time",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "hidden"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Measurement",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Field",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Value",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "Pod Name",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": false,
          "linkTargetBlank": true,
          "linkUrl": "https://10.245.128.68/grafana/d/9z3j-NOZz/process-health-process-history?orgId=1&var-host=${host}&var-process=${__cell}",
          "mappingType": 1,
          "pattern": "pod_name",
          "preserveFormat": false,
          "sanitize": false,
          "thresholds": [],
          "type": "string",
          "unit": "short",
          "valueMaps": []
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Last Activity",
          "preserveFormat": false,
          "sanitize": false,
          "thresholds": [],
          "type": "date",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "CPU Usage",
          "thresholds": [],
          "type": "number",
          "unit": "percent"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Memory",
          "thresholds": [],
          "type": "number",
          "unit": "bytes"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "/Relative Memory./",
          "thresholds": [],
          "type": "number",
          "unit": "percent"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "Avg. # Thread",
          "thresholds": [],
          "type": "number",
          "unit": "none"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Network IO",
          "thresholds": [],
          "type": "number",
          "unit": "Bps"
        }
      ],
      "targets": [
        {
          "query": "per_node = from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"kubernetes_pod_container\" and r._field == \"cpu_usage_nanocores\"  and r.namespace == \"$namespace\" and r.node_name == \"$host\")\n|> range($range)\n|> last()\n|> keep(columns:[\"_time\", \"_value\", \"pod_name\", \"container_name\"])\n|> last()\n|> drop(columns: [\"container_name\"])\n|> sum()\n|> group(columns:[\"pod_name\"])\n\ncpu_cores = from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"system\" and r._field == \"n_cpus\" and r.host == \"${host}\")\n|> range($range)\n|> last()\n|> keep(columns: [\"_value\", \"_time\"])\n|> drop(columns: [\"_time\"])\n|> rename(columns: {_value:\"cpu_total\"})\n\njoin(tables: {cpu: per_node, cores: cpu_cores})\n|> map(fn: (r) => ({_value: (float(v:r._value) / 1000000000.0 ) / float(v:r.cpu_total)}))\n|> keep(columns: [\"_value\", \"pod_name\"])\n|> rename(columns:{_value: \"CPU Usage\"})",
          "refId": "A",
          "resultFormat": "table"
        },
        {
          "query": "from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"kubernetes_pod_container\" and r._field == \"memory_rss_bytes\"  and r.namespace == \"$namespace\" and r.node_name == \"$host\")\n|> range($range)\n|> last()\n|> keep(columns:[\"_time\", \"_value\", \"pod_name\", \"container_name\"])\n|> last()\n|> drop(columns: [\"container_name\"])\n|> sum()\n|> group(columns:[\"pod_name\"])\n|> rename(columns:{_value: \"Memory\"})",
          "refId": "C",
          "resultFormat": "table"
        },
        {
          "query": "pod_mem = from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"kubernetes_pod_container\" and r._field == \"memory_rss_bytes\"  and r.namespace == \"$namespace\" and r.node_name == \"$host\")\n|> range($range)\n|> last()\n|> keep(columns:[\"_time\", \"_value\", \"pod_name\", \"container_name\"])\n|> last()\n|> drop(columns: [\"container_name\"])\n|> sum()\n|> group(columns:[\"pod_name\"])\n\nnode_mem = from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"mem\" and r._field == \"total\" and r.host == \"${host}\")\n|> range($range)\n|> last()\n|> keep(columns: [\"_value\"])\n|> rename(columns:{_value: \"total_mem\"})\n\njoin(tables: {sf: pod_mem, ny: node_mem})\n|> map(fn: (r) => ({_value: float(v:r._value)/float(v:r.total_mem) * 100.0}))\n|> keep(columns: [\"pod_name\", \"_value\"])\n|> rename(columns: {_value:\"Relative Memory (%)\"})",
          "refId": "G",
          "resultFormat": "table"
        },
        {
          "query": "firstV=from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"kubernetes_pod_network\" and (r._field == \"rx_bytes\" or r._field == \"tx_bytes\") and r.namespace == \"$namespace\" and r.node_name == \"$host\" )\n|> range($range)\n|> first()\n|> keep(columns:[\"_time\", \"_value\", \"pod_name\", \"_field\"])\n\nlastV=from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"kubernetes_pod_network\" and (r._field == \"rx_bytes\" or r._field == \"tx_bytes\") and r.namespace == \"$namespace\" and r.node_name == \"$host\" )\n|> range($range)\n|> last()\n|> keep(columns:[\"_time\", \"_value\", \"pod_name\", \"_field\"])\n\nunion(tables:[firstV,lastV])\n|> sort(columns: [\"_time\"])\n|> derivative(nonNegative: true, unit:1s)\n|> last()\n|> keep(columns:[\"_value\", \"pod_name\"])\n|> sum()\n|> rename(columns:{_value: \"Network IO\"})",
          "refId": "B",
          "resultFormat": "table"
        },
        {
          "query": "from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"inventory_kubernetes_pod_container\" and r._field == \"state_code\"  and r.namespace == \"$namespace\" and r.node_name == \"$host\")\n|> range($range)\n|> last()\n|> keep(columns:[\"_value\", \"pod_name\"])\n|> last()\n|> map(fn: (r) => ( {pod_name: r.pod_name,\nStatus: if r._value == 0 then \"Running\" else string(v:if r._value == 1 then \"Terminated\" else string(v:if r._value == 2 then \"Waiting\" else \"Unknown\"))}))",
          "refId": "D",
          "resultFormat": "table"
        },
        {
          "query": "firstV=from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"inventory_kubernetes_pod_container\" and r._field == \"restarts_total\" and r.namespace == \"$namespace\" and r.node_name == \"$host\" )\n|> range($range)\n|> first()\n|> keep(columns:[\"_time\", \"_value\", \"pod_name\", \"container_name\", \"_field\"])\n\nlastV=from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"inventory_kubernetes_pod_container\" and r._field == \"restarts_total\" and r.namespace == \"$namespace\" and r.node_name == \"$host\" )\n|> range($range)\n|> last()\n|> keep(columns:[\"_time\", \"_value\", \"pod_name\", \"container_name\", \"_field\"])\n\nunion(tables:[firstV,lastV])\n|> sort(columns: [\"_time\"])\n|> difference(columns: [\"_value\"])\n|> last()\n|> keep(columns:[\"_value\", \"pod_name\"])\n|> sum()\n|> rename(columns:{_value: \"Restarts\"})",
          "refId": "E",
          "resultFormat": "table"
        },
        {
          "query": "from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"kubernetes_pod_container\" and r._field == \"memory_rss_bytes\"  and r.namespace == \"$namespace\" and r.node_name == \"$host\")\n|> range($range)\n|> last()\n|> keep(columns:[\"_time\", \"_value\", \"pod_name\"])\n|> last()\n|> rename(columns:{_time: \"Last Activity\"})",
          "refId": "F",
          "resultFormat": "table"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Overview of The Pods List on ${host}",
      "transform": "table",
      "type": "table"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 6,
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "decimals": 2,
          "description": "History of the percentage of the node's CPU used by the process in the selected time range. The maximum time range could be the last 5 days because it is limited by the retention policy.",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 14
          },
          "id": 4,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": false,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "query": "per_node = from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"kubernetes_pod_container\" and r._field == \"cpu_usage_nanocores\"  and r.namespace == \"$namespace\" and r.node_name == \"$host\" and r.pod_name =~ /${pod:pipe}/ and r.container_name =~ /${container:pipe}/)\n|> range($range)\n|> keep(columns:[\"_time\", \"_value\", \"pod_name\", \"container_name\"])\n\ncpu_cores = from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"system\" and r._field == \"n_cpus\" and r.host == \"${host}\")\n|> range($range)\n|> keep(columns: [\"_value\", \"_time\"])\n|> rename(columns: {_value:\"cpu_total\"})\n\njoin(tables: {cpu: per_node, cores: cpu_cores}, on:[\"_time\"])\n|> map(fn: (r) => ({_value: (float(v:r._value) / 1000000000.0) / float(v:r.cpu_total), _time: r._time}))\n|> keep(columns: [\"container_name\", \"_value\", \"_time\"])",
              "refId": "A",
              "resultFormat": "time_series"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "CPU Usage",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 2,
              "format": "percent",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "decimals": 2,
          "description": "History of the memory used by the process in the selected time range. The maximum time range could be 5 days because it is limited by the retention policy.",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 14
          },
          "id": 32,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "query": "from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"kubernetes_pod_container\" and r._field == \"memory_rss_bytes\"  and r.namespace == \"$namespace\" and r.node_name == \"$host\" and r.pod_name =~ /${pod:pipe}/ and r.container_name =~ /${container:pipe}/)\n|> range($range)\n|> keep(columns:[\"_time\", \"_value\", \"container_name\"])",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Memory",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 2,
              "format": "bytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "decimals": 2,
          "description": "History of the percentage of the memory used relative to the memory available to the process in the selected time range. The maximum time range could be 5 days because it is limited by the retention policy.",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 16,
            "y": 14
          },
          "id": 34,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "query": "process_mem = from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"kubernetes_pod_container\" and r._field == \"memory_rss_bytes\"  and r.namespace == \"$namespace\" and r.node_name == \"$host\" and r.pod_name =~ /${pod:pipe}/ and r.container_name =~ /${container:pipe}/)\n|> range($range)\n|> keep(columns:[\"_time\", \"_value\", \"container_name\"])\n\nnode_mem = from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"mem\" and r._field == \"total\" and r.host == \"${host}\")\n|> range($range)\n|> keep(columns: [\"_value\", \"_time\"])\n|> rename(columns:{_value: \"total_mem\"})\n\njoin(tables: {sf: process_mem, ny: node_mem}, on: [\"_time\"])\n|> map(fn: (r) => ({_value: float(v:r._value)/float(v:r.total_mem) * 100.0, _time: r._time}))\n|> set(key: \"_field\", value: \"relative_mem\")\n",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Relative Memory (%)",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": -1,
              "format": "percent",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "decimals": 2,
          "description": "Pod network statistics (sent / received bytes)",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 22
          },
          "id": 39,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "query": "from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"kubernetes_pod_network\" and r._field == \"rx_bytes\" and r.namespace == \"$namespace\" and r.node_name == \"$host\" and r.pod_name =~ /${pod:pipe}/ )\n|> range($range)\n|> keep(columns:[\"_time\", \"_value\"])\n|> derivative(nonNegative: true, unit:1s)\n|> set(key: \"_field\", value: \"Received Bytes\")\n",
              "refId": "A"
            },
            {
              "query": "from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"kubernetes_pod_network\" and r._field == \"tx_bytes\" and r.namespace == \"$namespace\" and r.node_name == \"$host\" and r.pod_name =~ /${pod:pipe}/ )\n|> range($range)\n|> keep(columns:[\"_time\", \"_value\"])\n|> derivative(nonNegative: true, unit:1s)\n|> set(key: \"_field\", value: \"Sent Bytes\")",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Pod Network I/O",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 2,
              "format": "Bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "decimals": 0,
          "description": "Total number of restarts of container inside pod",
          "fill": 9,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 22
          },
          "id": 41,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": false,
            "hideEmpty": true,
            "hideZero": true,
            "max": false,
            "min": false,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": true,
            "values": true
          },
          "lines": true,
          "linewidth": 0,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": true,
          "targets": [
            {
              "query": "from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"inventory_kubernetes_pod_container\" and r._field == \"restarts_total\"  and r.namespace == \"$namespace\" and r.node_name == \"$host\" and r.pod_name =~ /${pod:pipe}/ and r.container_name =~ /${container:pipe}/)\n|> range($range)\n|> keep(columns:[\"_time\", \"_value\", \"container_name\"])\n|> difference()\n",
              "refId": "A",
              "resultFormat": "time_series"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Restarts",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "decimals": 0,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "decimals": 0,
          "description": "Status of containers.\n0 - Running\n1 - Terminated\n2 - Waiting\n3 - Unknown",
          "fill": 1,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 16,
            "y": 22
          },
          "id": 40,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "query": "from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"inventory_kubernetes_pod_container\" and r._field == \"state_code\"  and r.namespace == \"$namespace\" and r.node_name == \"$host\" and r.pod_name =~ /${pod:pipe}/ and r.container_name =~ /${container:pipe}/)\n|> range($range)\n|> keep(columns:[\"_time\", \"_value\", \"container_name\"])\n",
              "refId": "A",
              "resultFormat": "time_series"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Status",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "decimals": 0,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "columns": [],
          "description": "The last time the process restarted on the node in the selected time range. The maximum time range could be 5 days because it is limited by the retention policy.",
          "fontSize": "100%",
          "gridPos": {
            "h": 3,
            "w": 24,
            "x": 0,
            "y": 30
          },
          "id": 38,
          "links": [],
          "options": {},
          "pageSize": null,
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 0,
            "desc": true
          },
          "styles": [
            {
              "alias": "Time",
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "pattern": "Time",
              "type": "hidden"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "Value",
              "thresholds": [],
              "type": "hidden",
              "unit": "short"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "Field",
              "thresholds": [],
              "type": "hidden",
              "unit": "short"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "Measurement",
              "thresholds": [],
              "type": "hidden",
              "unit": "short"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "Last restart",
              "thresholds": [],
              "type": "date",
              "unit": "short"
            }
          ],
          "targets": [
            {
              "query": "from(bucket: \"monitoring_op\")\n|> filter(fn: (r) => r._measurement == \"kubernetes_pod_container\" and r._field == \"memory_rss_bytes\"  and r.namespace == \"$namespace\" and r.node_name == \"$host\" and r.pod_name =~ /${pod:pipe}/ and r.container_name =~ /${container:pipe}/)\n|> range($range)\n|> keep(columns:[\"_time\", \"_value\"])\n|> last()\n|> rename(columns:{_time: \"Last Activity\"})",
              "refId": "A",
              "resultFormat": "table"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Last Activity",
          "transform": "table",
          "type": "table"
        }
      ],
      "repeat": "process",
      "title": "History \"${pod}\" process on ${host}",
      "type": "row"
    }
  ],
  "refresh": false,
  "schemaVersion": 18,
  "style": "dark",
  "tags": [
    "Process Health"
  ],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {},
        "datasource": "${DS_FLUX}",
        "definition": "tag_values(monitoring_op, kubernetes_node, host)",
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "host",
        "options": [],
        "query": "tag_values(monitoring_op, kubernetes_node, host)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "${DS_FLUX}",
        "definition": "from(bucket: \"monitoring_op\")|> filter(fn: (r) => r._measurement == \"kubernetes_pod_network\" and r.node_name == \"${host}\")|> range(start: -1h)|> last()|> group(columns: [\"namespace\"])|> distinct(column: \"namespace\")",
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "namespace",
        "options": [],
        "query": "from(bucket: \"monitoring_op\")|> filter(fn: (r) => r._measurement == \"kubernetes_pod_network\" and r.node_name == \"${host}\")|> range(start: -1h)|> last()|> group(columns: [\"namespace\"])|> distinct(column: \"namespace\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": ".*",
        "current": {},
        "datasource": "${DS_FLUX}",
        "definition": "from(bucket: \"monitoring_op\")|> filter(fn: (r) => r._measurement == \"kubernetes_pod_network\" and r.node_name == \"${host}\" and r.namespace == \"${namespace}\")|> range(start: -1h)|> last()|> group(columns: [\"pod_name\"])|> distinct(column: \"pod_name\")",
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "pod",
        "options": [],
        "query": "from(bucket: \"monitoring_op\")|> filter(fn: (r) => r._measurement == \"kubernetes_pod_network\" and r.node_name == \"${host}\" and r.namespace == \"${namespace}\")|> range(start: -1h)|> last()|> group(columns: [\"pod_name\"])|> distinct(column: \"pod_name\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": ".*",
        "current": {},
        "datasource": "${DS_FLUX}",
        "definition": "from(bucket: \"monitoring_op\")|> filter(fn: (r) => r._measurement == \"kubernetes_pod_container\" and r.node_name == \"${host}\" and r.namespace == \"${namespace}\" and r.pod_name=~ /${pod:pipe}/  )|> range(start: -1h)|> last()|> group(columns: [\"container_name\"])|> distinct(column: \"container_name\")",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "container",
        "options": [],
        "query": "from(bucket: \"monitoring_op\")|> filter(fn: (r) => r._measurement == \"kubernetes_pod_container\" and r.node_name == \"${host}\" and r.namespace == \"${namespace}\" and r.pod_name=~ /${pod:pipe}/  )|> range(start: -1h)|> last()|> group(columns: [\"container_name\"])|> distinct(column: \"container_name\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "auto": false,
        "auto_count": 30,
        "auto_min": "10s",
        "current": {
          "text": "1m",
          "value": "1m"
        },
        "hide": 2,
        "label": null,
        "name": "interval",
        "options": [
          {
            "selected": true,
            "text": "1m",
            "value": "1m"
          },
          {
            "selected": false,
            "text": "10m",
            "value": "10m"
          },
          {
            "selected": false,
            "text": "30m",
            "value": "30m"
          },
          {
            "selected": false,
            "text": "1h",
            "value": "1h"
          },
          {
            "selected": false,
            "text": "6h",
            "value": "6h"
          },
          {
            "selected": false,
            "text": "12h",
            "value": "12h"
          },
          {
            "selected": false,
            "text": "1d",
            "value": "1d"
          },
          {
            "selected": false,
            "text": "7d",
            "value": "7d"
          },
          {
            "selected": false,
            "text": "14d",
            "value": "14d"
          },
          {
            "selected": false,
            "text": "30d",
            "value": "30d"
          }
        ],
        "query": "1m,10m,30m,1h,6h,12h,1d,7d,14d,30d",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Process Health - Process List by Node",
  "uid": "NY1FTOOZz",
  "version": 1
}
