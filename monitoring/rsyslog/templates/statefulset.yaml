#
# Copyright Â© [2020] Dell Inc. or its subsidiaries.
# All Rights Reserved.
#
# This software contains the intellectual property of Dell Inc.
# or is licensed to Dell Inc. from third parties. Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of Dell Inc. or its subsidiaries.
#
#
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "rsyslog.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "rsyslog.fullname" . }}
    helm.sh/chart: {{ include "rsyslog.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: {{ template "rsyslog.fullname" . }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "rsyslog.fullname" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "rsyslog.fullname" . }}
      annotations:
        # Include a hash of the configmap in the pod template
        # This means that if the configmap changes, the deployment will be rolled
        checksum/config: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      affinity:
        # Use pod anti-affinity rules to deploy statefulset pods one-per-node.
        # (like DaemonSet pods)
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "app.kubernetes.io/name"
                operator: In
                values:
                - {{ template "rsyslog.fullname" . }}
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ include "common-lib.monitoring_registry" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Values.global.monitoring_tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        ports:
        - containerPort: {{ .Values.service.bind_address }}
          name: rsyslog
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: {{ template "rsyslog.fullname" . }}-data
          mountPath: {{ .Values.config.storage_directory }}
        - mountPath: /etc/rsyslog.conf
          name: config
          subPath: rsyslog.conf
        - mountPath: /crash-dump
          name: crash-dump
        env:
          # This pulls HOSTNAME from the node, not the pod.
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
      - name: logrotate
        image: "{{ include "common-lib.monitoring_registry" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Values.global.monitoring_tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command: ["cron"]
        args: ["-n"]
        env:
          - name: LOGS_SIZE_HIGH_WATERMARK
            value: "{{ .Values.config.logs_size_high_watermark }}"
          - name: LOGS_SIZE_LOW_WATERMARK
            value: "{{ .Values.config.logs_size_low_watermark }}"
        volumeMounts:
        - name: {{ template "rsyslog.fullname" . }}-data
          mountPath: {{ .Values.config.storage_directory }}
        - mountPath: /etc/cron.d
          name: cron-config
        - mountPath: /etc/logrotate.d/svc
          name: logrotate-config
          subPath: svc
        - mountPath: /etc/logrotate.d/remove_old
          name: logrotate-config
          subPath: remove_old
        - mountPath: /etc/logrotate.conf
          name: logrotate-config
          subPath: logrotate.conf
        - mountPath: /etc/cleanup_logs
          name: cleanup-script
          subPath: cleanup_logs
        - mountPath: /crash-dump
          name: crash-dump
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ template "rsyslog.fullname" . }}
      - name: logrotate-config
        configMap:
          name: {{ .Release.Name }}-rsyslog-client-logrotate-config
      - name: cron-config
        configMap:
          name: {{ .Release.Name }}-rsyslog-client-cron-config
      - name: cleanup-script
        configMap:
          name: {{ .Release.Name }}-rsyslog-client-cleanup-logs-script
          defaultMode: 0755
      - name: crash-dump
        emptyDir: {}
      {{- if (not .Values.persistence.enabled ) }}
      - name: {{ template "rsyslog.fullname" . }}-data
        emptyDir: {}
      {{- end }}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ template "rsyslog.fullname" . }}-data
      annotations:
      {{- range $key, $value := .Values.persistence.annotations }}
        {{ $key }}: "{{ $value }}"
      {{- end}}
      labels:
        release: {{ .Release.Name }}
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
      storageClassName: "{{ .Values.persistence.storageClassName }}"
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
{{- end }}



