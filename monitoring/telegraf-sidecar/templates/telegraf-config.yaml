#
# Copyright Â© [2020] Dell Inc. or its subsidiaries.
# All Rights Reserved.
#
# This software contains the intellectual property of Dell Inc.
# or is licensed to Dell Inc. from third parties. Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of Dell Inc. or its subsidiaries.
#
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common-lib.telegraf_sidecar_config_name" . }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  telegraf.conf: |+
    {{- $telegraf_interval_sec := "300s" -}}
    # Configuration for telegraf agent
    [ agent ]
      ## Default data collection interval for all inputs
      ## Set to 10 seconds to make sure data is sent to output as soon as possible
      interval = "10s"

      ## Default flushing interval for all outputs. You shouldn't set this below
      ## interval. Maximum flush_interval will be flush_interval + flush_jitter
      flush_interval = "10s"

      ## Jitter the flush interval by a random amount. This is primarily to avoid
      ## large write spikes for users running a large number of telegraf instances.
      ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
      flush_jitter = "10s"

      debug = true

      ## Following limitation of batch size and buffer limit ensures memory use <70MB
      ## when 2 InfluxDB instances are down.
      ## See README.md and MONITORING-241
      metric_batch_size = 1000
      metric_buffer_limit = 4000

    [[outputs.influxdb]]
      skip_database_creation = true
      urls = ["http://{{ .Release.Name }}-telegraf.{{ .Release.Namespace }}.svc.cluster.local:11002"]
      timeout = "30s"
      database = "default"
      retention_policy = "default"

    # Read metrics about disk usage by mount point
    [[inputs.disk]]
      interval = "{{$telegraf_interval_sec}}"
      ## By default stats will be gathered for all mount points.
      ## Set mount_points will restrict the stats to only the specified mount points.
      mount_points = ["/", "/pv"]
      fieldpass = ["free", "used", "total", "used_percent", "inodes*"]

    [[processors.override]]
      namepass = [ "disk" ]
      tagexclude = ["device", "fstype", "mode"]
