apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ template "telegraf.fullname" . }}-nginx"
  labels:
    release: {{ .Release.Name }}
data:
  nginx.conf: |+
    server {
      server_name {{ include "telegraf.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local;

    {{- if and .Values.global.tls_enabled .Values.global.telegraf_tls_enabled }}
      listen {{ .Values.service.bind_address }} ssl;
      {{- if $.Values.global.use_vault_for_ssl }}
      ssl_certificate        /vault/secrets/server.crt;
      ssl_certificate_key    /vault/secrets/server.key;
      ssl_client_certificate /vault/secrets/trusted_client_ca.crt;
      ssl_verify_client         optional;
      ssl_verify_depth          2;
      {{- else }}
      ssl_certificate     /etc/nginx/cert/server.crt;
      ssl_certificate_key /etc/nginx/cert/server.key;
      ssl_password_file   /etc/nginx/cert/password;
      ssl_verify_client         off;
      {{- end }}
      ssl_protocols             TLSv1.2;
      ssl_session_cache   shared:SSL:1m;
      ssl_session_timeout 5m;
    {{- else }}
      listen {{ .Values.service.bind_address }};
    {{- end }}

      location / {
          proxy_pass http://127.0.0.1:{{ .Values.config.http.bind_address }};
          proxy_set_header Connection "";
          proxy_set_header Authorization "";
          proxy_buffering            off;
          proxy_buffer_size          32k;
          proxy_buffers           16 32k;
          proxy_busy_buffers_size   256k;

          proxy_set_header   Host			 $host;
          proxy_set_header   X-Real-IP		$remote_addr;
          proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
          add_header Cache-Control private;
      }
    }

