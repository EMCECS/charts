import "http"

// MONITORING-414
// good, bad, maintenance counters for disks for dashboards widget
// example:
//#datatype,string,long,long,long,long
//#group,false,false,false,false,false
//#default,_result,,,,
//,result,table,bad_disks,good_disks,maintenance_disks
//,,0,2,228,1

disks = from(bucket: "monitoring_main")
|> filter(fn: (r) => r._measurement == "ssm_sstable_SSTable_SS_partitions_PD_status" and r._field == "hwState")
|> range(start:{{ .Start }}, stop:{{ .Stop }})
|> last()
|> keep(columns: ["SS", "PD", "_value"])
|> last()
|> group()

//filter out different statuses
good_d = disks
|> filter(fn: (r) => r.hwState =~ /(?i)good/)
|> count(columns: ["PD"])
|> group()
|> sum(columns: ["PD"])
|> rename(columns:{"PD": "good_disks"})

bad_d = disks
|> filter(fn: (r) => r.hwState =~ /(?i)bad|(?i)unknown|(?i)suspect/)
|> count(columns: ["PD"])
|> group()
|> sum(columns: ["PD"])
|> rename(columns:{"PD": "bad_disks"})

maintenance_d = disks
|> filter(fn: (r) => r.hwState =~ /(?i)maintenance/)
|> count(columns: ["PD"])
|> group()
|> sum(columns: ["PD"])
|> rename(columns:{"PD": "maintenance_disks"})

count_disks = join(tables: {good_d: good_d, bad_d: bad_d})
join(tables: {count_disks: count_disks, maintenance_d: maintenance_d})
|> set(key: "_measurement", value: "cq_hardware_disks_counter")
|> map(fn: (r) => ({_time: {{ .Stop }}, good_disks: r.good_disks, bad_disks: r.bad_disks, maintenance_disks: r.maintenance_disks}))

