---
# Default values for ecs-flex.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# These global settings relate to both the ECS Flex operator as well as the
# Zookeeper Operator subchart
global:
  # Name of the target platform
  # By setting this value all necessary resources for ecs-flex will be created and configured accordingly.
  # Valid values are
  # "VMware" - VMWare Persistent Services Platform
  # "Vmware-PKS" - PKS platform with vSphere UI integration
  # "Atlantic" - Project Atlantic Bare-Metal Kubernetes platform
  # "Default" - All others
  platform: Default

  # Name of a Kubernetes secret with Docker credentials for the private registry
  # registrySecret: ecs-flex-registry

  # The private docker registry hosting containers for ECS Flex
  registry: emccorp

  # Default: true == Watch ALL namespaces
  watchAllNamespaces: true

  # Start the  FIO and sonobuoy cronjobs to gather the healthcheck of the k8s cluster
  # this flag is set under global because the FIO and sonobuoy are sub-charts and the cronjobs runs under the sub-charts
  enableHealthcheck: false

  # Flex 1.0 regional monitoring stack
  monitoring:
    enabled: false

# sub-chart enablers
zookeeper:
  enabled: true

atlas:
  enabled: true

sonobuoy:
  enabled: true

iam:
  enabled: false

pravega-operator:
  enabled: false

bookkeeper-operator:
  enabled: false

# Create an application resource for management  using Dell EMC common installer or other application-resource
# controllers
createApplicationResource: true

# The default docker tag and pull policy for objectscale-manager services
tag: 0.51.0
pullPolicy: IfNotPresent

# The default number of replicas for the objectscale-manager deployment
replicaCount: 1

# The image configured for the ObjectScale Manager
image:
  repository: objectscale-operator
  # tag: stable
  # pullPolicy: IfNotPresent

# A customer provided log server can be used for external log aggregation.
# This receiver will be forwarded all ECS platform logs from any ECS instance
# deployed by the operator. If "logReceiver.create" is enabled, then a
# syslog-based receiver will be created, and other connectivity configuration
# options will be ignored.
# If log receiver configuration is not provided then ECS logs will be redirected to stdout
logReceiver:
  # The type of log receiver that ECS Flex will use to consolidate logs. Valid
  # are: "Syslog" and "Elasticsearch".  When using a "Syslog" receiver, you can
  # optionally instruct ECS Flex to create a syslog receiver.  In the case of
  # Elasticsearch, the administrator is expected to create the cluster, and then
  # provide connectivity details in the "logReceiver" configuration block below.
  #
  # type: Syslog

  # User login will be used by fluentd to connect to the elastic search.
  # user: elastic

  # Password will be used by fluentd to connect to the elsatic search.
  # password: 123456

  # Configure an external Syslog or Elasticsearch hostname to receive logs from
  # ECS instances
  # host: my-syslog-server
  #
  # Configure protocol to receive logs for a Syslog-based receiver. Valid values
  # for syslog receivers are "tcp". Valid values for Elasticsearch are
  # "http" and "https"
  # protocol: tcp
  #
  # Port to use for customer provided Syslog or Elasticsearch receiver
  # port: 514

  # The ObjectScale operator can deploy an rSyslog receiver to aggregate logs from
  # ECS instances. This feature is recommended for enterprise support of ECS
  # systems.
  # create: false

  # The Docker image used for the rSyslog receiver
  image:
    repository: rsyslog
    # tag: stable
    # pullPolicy: IfNotPresent

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 50Gi
    # storageClassName: default

resources:
  operator:
    limits:
      #cpu:
      memory: 70Mi
    requests:
      #cpu:
      memory: 35Mi
  fluentbitAgent:
    limits:
      #cpu:
      memory: 40Mi
    requests:
      #cpu:
      memory: 20Mi
  rsyslog:
    limits:
      #cpu:
      memory: 60Mi
    requests:
      #cpu:
      memory: 30Mi

# Will install crd for object store
installObjectStoreCRD: true

# installApplicationCRD will install crd for application resources
installApplicationCRD: true

# installInfluxCRD will install crd for influx
installInfluxCRD: true

influx:
  # metricsPort is the port that will be used by metrics in influx
  metricsPort: 6000
  image:
    repository: influxdb-operator
    # registry: ecs
    # tag: v1
    # pullPolicy: IfNotPresent
  replicas: 1


telemetry:
  image:
    repository: telemetry-upload
    # tag: stable
    # pullPolicy: IfNotPresent
  # this is as per cronjob schedule - every 12 hours, please follow the cronjob format to edit it
  schedule: "0 */12 * * *"

nodeSelector: {}

tolerations: []

affinity: {}

# The log agent configuration for log collection of Manager components
fluentbitAgent:
  image:
    repository: fluent-bit
    tag: 0.28.0
    # pullPolicy: IfNotPresent

# hook for VMWare platform
hooks:
  registry: "lachlanevenson"
  repository: "k8s-kubectl"
  tag: "v1.13.4"
