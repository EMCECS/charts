suite: test docker-secret
templates:
  - docker_secret.yaml
tests:
  - it: should NOT create a new docker secret with no docker reg settings
    set:
      product: COSMIKDEBRIS
      customResourceName: foo
    asserts:
    - hasDocuments:
        count: 0
  - it: should NOT create a new docker secret with explicit dockerSecret set
    set:
      product: COSMIKDEBRIS
      dockerSecret: my-docker-reg-secret
      customResourceName: foo
    asserts:
    - hasDocuments:
        count: 0
  - it: should create a docker registry secret with username/password set
    set:
      product: COSMIKDEBRIS
      dockerUsername: janedoe
      dockerPassword: PassW0rd
    asserts:
    - isKind:
        of: Secret
    - equal:
        path: metadata.name
        value: cosmikdebris-docker-secret
    - equal:
        path: metadata.namespace
        value: default
    - equal:
        path: data.\.dockerconfigjson
        value: eyJhdXRocyI6IHsiaHR0cHM6Ly9pbmRleC5kb2NrZXIuaW8vdjEvIjogeyJ1c2VybmFtZSI6ICJqYW5lZG9lIiwgInBhc3N3b3JkIjogIlBhc3NXMHJkIiwgImF1dGgiOiAiYW1GdVpXUnZaVHBRWVhOelZ6QnlaQT09In19fQ==
  - it: should use customResourceName to create docker registry secret name
    set:
      product: COSMIKDEBRIS
      dockerUsername: janedoe
      dockerPassword: PassW0rd
      customResourceName: foo
    asserts:
    - isKind:
        of: Secret
    - equal:
        path: metadata.name
        value: foo-docker-secret
    - equal:
        path: metadata.namespace
        value: default
    - equal:
        path: data.\.dockerconfigjson
        value: eyJhdXRocyI6IHsiaHR0cHM6Ly9pbmRleC5kb2NrZXIuaW8vdjEvIjogeyJ1c2VybmFtZSI6ICJqYW5lZG9lIiwgInBhc3N3b3JkIjogIlBhc3NXMHJkIiwgImF1dGgiOiAiYW1GdVpXUnZaVHBRWVhOelZ6QnlaQT09In19fQ==
