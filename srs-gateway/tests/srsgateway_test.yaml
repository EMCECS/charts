suite: test srsgateway
templates:
  - srsgateway.yaml
tests:
  - it: should create an SRS gateway custom resource with only required fields set
    set:
      product: MOTHERSOFINVENTION
      gateway.hostname: 192.0.2.7
      gateway.login: frank.zappa:ZirconEncrusted
    asserts:
    - isKind:
        of: SRSGateway
    - equal:
        path: metadata.name
        value: mothersofinvention
    - equal:
        path: metadata.namespace
        value: default
    - equal:
        path: spec.connectionInfo.hostname
        value: 192.0.2.7
    - equal:
        path: spec.connectionInfo.port
        value: 9443
    - equal:
        path: spec.connectionInfo.product
        value: MOTHERSOFINVENTION
    - equal:
        path: spec.connectionInfo.credsSecret
        value: mothersofinvention-srs-creds-secret
    - equal:
        path: spec.remoteAccess.registry
        value: emccorp
    - equal:
        path: spec.remoteAccess.repository
        value: remote-access
    - equal:
        path: spec.remoteAccess.tag
        value: 0.2.0 
    - equal:
        path: spec.remoteAccess.pullPolicy
        value: Always
    - equal:
        path: spec.remoteAccess.servicePort
        value: 22
    - equal:
        path: spec.notifier.registry
        value: emccorp
    - equal:
        path: spec.notifier.repository
        value: srs-notifier
    - equal:
        path: spec.notifier.tag
        value: 0.2.0 
    - equal:
        path: spec.notifier.pullPolicy
        value: Always
    - equal:
        path: spec.notifier.servicePort
        value: 50051
    - equal:
        path: spec.notifier.grpcConnTimeout
        value: 5
    - equal:
        path: spec.notifier.grpcRetries
        value: 3
  - it: should create an SRS GW custom resource with an explicit name
    set:
      product: MOTHERSOFINVENTION
      gateway.hostname: 192.0.2.7
      gateway.login: frank.zappa:ZirconEncrusted
      customResourceName: nanook
    asserts:
    - equal:
        path: metadata.name
        value: nanook
  - it: should create an SRS GW custom resource with a non-default namespace
    set:
      product: YELLOWSNOW
      gateway.hostname: 192.0.2.7
      gateway.login: frank.zappa:ZirconEncrusted
      namespace: zappa
    asserts:
    - equal:
        path: metadata.name
        value: yellowsnow
    - equal:
        path: metadata.namespace
        value: zappa
  - it: should create an SRS GW custom resource with global registry, tab, and pullPolicy
    set:
      product: DENTALFLOSSTYCOON
      gateway.hostname: 192.0.2.7
      gateway.login: frank.zappa:ZirconEncrusted
      registry: harbor.lss.emc.com/ecs
      tag: latest
      pullPolicy: IfNotPresent
    asserts:
    - equal:
        path: spec.remoteAccess.registry
        value: harbor.lss.emc.com/ecs
    - equal:
        path: spec.remoteAccess.tag
        value: latest
    - equal:
        path: spec.remoteAccess.pullPolicy
        value: IfNotPresent
    - equal:
        path: spec.notifier.registry
        value: harbor.lss.emc.com/ecs
    - equal:
        path: spec.notifier.tag
        value: latest
    - equal:
        path: spec.notifier.pullPolicy
        value: IfNotPresent
  - it: should create remote-access deployment with explicit registry, repository, tag, and pullPolicy
    set:
      product: NANOOK
      gateway.hostname: 192.0.2.7
      gateway.login: frank.zappa:ZirconEncrusted
      remoteAccess.registry: my-registry
      remoteAccess.repository: my-remote-access
      remoteAccess.tag: my-tag
      remoteAccess.pullPolicy: IfNotPresent
    asserts:
    - equal:
        path: spec.remoteAccess.registry
        value: my-registry
    - equal:
        path: spec.remoteAccess.repository
        value: my-remote-access
    - equal:
        path: spec.remoteAccess.tag
        value: my-tag
    - equal:
        path: spec.remoteAccess.pullPolicy
        value: IfNotPresent
    - equal:
        path: spec.notifier.registry
        value: emccorp
    - equal:
        path: spec.notifier.repository
        value: srs-notifier
    - equal:
        path: spec.notifier.tag
        value: 0.2.0 
    - equal:
        path: spec.notifier.pullPolicy
        value: Always
  - it: should create notifier deployment with explicit registry, repository, tag, and pullPolicy
    set:
      product: NANOOK
      gateway.hostname: 192.0.2.7
      gateway.login: frank.zappa:ZirconEncrusted
      notifier.registry: my-registry
      notifier.repository: my-notifier
      notifier.tag: my-tag
      notifier.pullPolicy: IfNotPresent
    asserts:
    - equal:
        path: spec.remoteAccess.registry
        value: emccorp
    - equal:
        path: spec.remoteAccess.repository
        value: remote-access
    - equal:
        path: spec.remoteAccess.tag
        value: 0.2.0 
    - equal:
        path: spec.remoteAccess.pullPolicy
        value: Always
    - equal:
        path: spec.notifier.registry
        value: my-registry
    - equal:
        path: spec.notifier.repository
        value: my-notifier
    - equal:
        path: spec.notifier.tag
        value: my-tag
    - equal:
        path: spec.notifier.pullPolicy
        value: IfNotPresent
  - it: should NOT include a spec.dockerSecret if dockerSecret, dockerUsername, and dockerPassword not set
    set:
      product: NANOOK
      gateway.hostname: 192.0.2.7
      gateway.login: frank.zappa:ZirconEncrusted
    asserts:
    - isNull:
        path: spec.dockerSecret
  - it: should create use explicit dockerSecret if set
    set:
      product: NANOOK
      dockerSecret: my-docker-secret
      gateway.hostname: 192.0.2.7
      gateway.login: frank.zappa:ZirconEncrusted
    asserts:
    - equal:
        path: spec.dockerSecret
        value: my-docker-secret
  - it: should use a dockerSecret name that has product as a prefix
    set:
      product: NANOOK
      gateway.hostname: 192.0.2.7
      gateway.login: frank.zappa:ZirconEncrusted
      dockerUsername: genghis
      dockerPassword: TemujiN
    asserts:
    - equal:
        path: spec.dockerSecret
        value: nanook-docker-secret
  - it: should use a dockerSecret name that has customResourceName as a prefix if that's set
    set:
      product: NANOOK
      customResourceName: foobar
      gateway.hostname: 192.0.2.7
      gateway.login: frank.zappa:ZirconEncrusted
      dockerUsername: genghis
      dockerPassword: TemujiN
    asserts:
    - equal:
        path: spec.dockerSecret
        value: foobar-docker-secret
