---
# Required and default values for the SRS gateway Custom Resource
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# The name to use for the SRS GW custom resource Kubernetes object. If set,
# this name will be used as a prefix for all secondary resources generated
# for the SRS GW custom resource. This allows for multiple SRS GW custom
# resources to use the same product name, while providing distinct names
# for the SRS GW CRs and their corresponding secondary resources.
#
# This explicit setting for resource name is provided primarily for testing.
# Production setups should leave this unset.
#
# If "customResourceName" is not set, the lowercase version of the "product"
# setting will be used for the name of the SRS GW CR as well as a name prefix
# for all secondary resources.
# customResourceName: "objectscale"

namespace: "default"

# ==================== MANDATORY SETTING ====================
# Product must be an "on-boarded" product/model name recognized by SRS
# product: "OBJECTSCALE"
# ===========================================================

# The default docker registry, tag and pull policy for the remote access and
# notifier pods that are created as SRS gateway CR secondary resources.
registry: "emccorp"
tag: 0.4.0
pullPolicy: "Always"

gateway:
  # ==================== MANDATORY SETTING ====================
  # The gateway hostname can be an IP address or an FQDN
  # hostname: "10.249.253.18"
  # ===========================================================

  # Port that the SRS Gateway is listening on for RESTful API requests.
  port: 9443

  # ==================== MANDATORY SETTING ====================
  # The login setting configures the user/password credentials
  # for registering a product with the SRS gateway
  # login: scott.jones@nordstrom.com:Password1
  # ===========================================================

# Docker registry secret, or alternatively, username/password credentials
# for kubelet to use to download docker images from a public Docker registry.
# These settings are only necessary when any of the following settings:
#     registry
#     remoteAccess.registry
#     notifier.registry
# point to a public Docker registry that requires authentication.
#
# The dockerSecret setting allows a user to re-use an existing Docker
# registry secret ("bring-your-own" registry secret).
#
# Alternatively, if dockerUsername and dockerPassword are set, then
# a Docker registry secret will be created. In this case, the name of the
# secret that is created will be either:
#   <customResourceName>-docker-secret
# if customResourceName is set; otherwise, it will be:
#   <product>-docker-secret
#
# dockerSecret: "my-existing-registry-secret"
# dockerUsername: "janedoe"
# dockerPassword: "PassW0rd"

remoteAccess:
  # registry: "emccorp"
  repository: "remote-access"
  # tag: "stable"
  # pullPolicy: "Always"
  servicePort: 22
  # The user/group/password to configure on the remote access pod
  user: "root"
  group: "adm"
  password: "ChangeMe"

notifier:
  # registry: "emccorp"
  repository: "srs-notifier"
  # tag: "stable"
  # pullPolicy: "Always"
  servicePort: 50051
  grpcConnTimeout: 5
  grpcRetries: 3
